Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Request ======
Created lunes 12 marzo 2018

=== Request 1 ===
Introduction to Requests
There are numerous reasons why JavaScript is the preferred language of the web. Amongst the most important reasons are JavaScript's non-blocking properties, or that it is an asynchronous language.

Imagine that you navigate to a web page that has a large image file as its background. Would you want the entire page to freeze while the image is retrieved from the source, or would you want to continue interacting with other parts of the site?

Most websites have to make multiple requests to work fully. The way JavaScript handles multiple requests is called its event loop. Messages that will be sent to other websites containing code are added to a queue as certain events occur. Each message is run completely before moving on to the next one, which might cause the user to wait a long time between actions.

To prevent this, long messages are broken into smaller messages that are added to the queue when they are ready to be run. In the case of requesting information from another site, we separate the request (asking another website for information) from what we want to do with the response (the information the website returns to us). We can do this using a system of technologies called Asynchronous JavaScript and XML, or AJAX.

Before continuing with this lesson, you should visit the Google URL Shortener API documentation and follow the instructions in this article to create an API Key.

Ejemplo

**function fun() {**
**  console.log('hi');**
**  setTimeout(() => {**
**    console.log('how are you');**
**  }, 2500);**
**  console.log('hi 2');**
**}**

**fun();**

=== HTTP Requests ===
AJAX involves requesting data over the web, which is done using HTTP Requests. There are four commonly used types of HTTP requests - GET, POST, PUT, and DELETE. In this lesson, we'll only be writing GET and POST requests. GET requests receive information from other sites by sending a query. POST requests can change information on another site and will receive information or data in response.
There are several differences between the way GET and POST requests are made. A GET request is like a search. If you navigate to Google and search for something, you might notice that all of your search terms are added to the URL, like this:
https://www.google.com/#q=pizza+near+union+square
This URL is saying "Google, please retrieve a list of pizza near Union Square." It is not introducing any new information to Google.

POST requests, on the other hand, introduce new information to another website. Instead of sending this information in the URL of the request, it is sent as part of the body of the request. You will see what this looks like in later exercises.


**// GET**

**const xhr = new XMLHttpRequest();**
**const url = 'http://api-to-call.com/endpoint';**
**xhr.responseType = 'json';**
**xhr.onreadystatechange = function() {**
**  if (xhr.readyState === XMLHttpRequest.DONE) {**
**    console.log(xhr.response);**
**  }**
**};**
**xhr.open('GET', url);**
**xhr.send();**


**// POST**

**const xhr = new XMLHttpRequest();**
**const url = 'http://api-to-call.com/endpoint';**
**const data = JSON.stringify({**
**  id: '200'**
**});**
**xhr.responseType = 'json';**
**xhr.onreadystatechange = function() {**
**  if (xhr.readyState === XMLHttpRequest.DONE) {**
**    console.log(xhr.response);**
**  }**
**};**
**xhr.open('POST', url);**
**xhr.send(data);**








