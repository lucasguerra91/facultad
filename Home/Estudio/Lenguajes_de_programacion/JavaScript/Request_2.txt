Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Request 2 ======
Created mi√©rcoles 14 marzo 2018

**// Include data for accessing Google APIs**

**const apiKey = 'AIzaSyCnxUwof_Q3rzaI1z4CtCYB3aAQDCsXI34';**
**const url = 'https://www.googleapis.com/urlshortener/v1/url';**
**const projection = 'FULL';**

**// Some page elements**

**const $inputField = $('#input');**
**const $expandButton = $('#expand');**
**const $shortenButton = $('#shorten');**
**const $responseField = $('#responseField');**

**// AJAX functions**

**function expandUrl() {**
** const urlToExpand = url + '?key=' + apiKey + '&shortUrl=' + $inputField.val();**
**  const xhr = new XMLHttpRequest();**
**  xhr.responseType = 'json';**
**  xhr.onreadystatechange = function() {**
**  if (xhr.readyState === XMLHttpRequest.DONE) {**
**    console.log(xhr.response);**
**    $responseField.append('<p>Your expanded url is: </p><p>' + xhr.response.longUrl + '</p>');**
**  	}**
**	};**
  
** xhr.open('GET', urlToExpand);**
** xhr.send();**
**}**

**function shortenUrl() {**

**}**

**function expand() {**
**  $responseField.empty();**
**  expandUrl();**
**  return false;**
**}**

**function shorten() {**
**  $responseField.empty();**
**  shortenUrl();**
**  return false;**
**}**

**// Call functions on submit**

**$expandButton.click(expand);**
**$shortenButton.click(shorten);**


=== XHR POST Requests I ===
In the previous exercise, you successfully wrote a GET request using AJAX to expand a URL that had been shortened using the Google URL Shortener API. This is a big deal!
Now, you're going to learn how to construct POST requests and, in a few exercises, you'll shorten a URL using the Google URL Shortener API!
Recall that in a GET request, the query information (what you're asking the server to return) is generally sent as part of the URL whereas in a POST request, the information is sent to the server as part of the body of the request. This information is created and saved in the data constant and sent to the API as an argument passed to the .send() method.
The first two lines of this request are identical to the first two lines of the GET request. The third line is new. The data that we want to send to our API must be formatted properly. The particular properties and values sent will depend on the API you're using and the information you wish to send and retrieve.
The object containing this data is passed to the JSON.stringify() method, which will format the object as a string. This is saved to a const called data.
Everything else remains the same until the final two lines. When we call the .open() method on the xhr object, we pass the argument 'POST' instead of 'GET'. Finally, we pass the data string to the .send() method.

=== Example ===
**const xhr = new XMLHttpRequest();**
**const url = 'https://api-to-call.com/endpoint';**
**const data = JSON.stringify({id: '200'});**

**xhr.responseType = 'json';**

**xhr.onreadystatechange = function(){**
**  if (xhr.readyState === XMLHttpRequest.DONE){**
**    console.log(xhr.response);**
**  };**
**};**

**xhr.open('POST', url);**
**xhr.send(data);**


=== Ejemplo completo ===
**// Include data for accessing Google APIs**

**const apiKey = 'AIzaSyCnxUwof_Q3rzaI1z4CtCYB3aAQDCsXI34';**
**const url = 'https://www.googleapis.com/urlshortener/v1/url';**
**const projection = 'FULL';**

**// Some page elements**

**const $inputField = $('#input');**
**const $expandButton = $('#expand');**
**const $shortenButton = $('#shorten');**
**const $responseField = $('#responseField');**

**// AJAX functions**

**function expandUrl() {**
** const urlToExpand = url + '?key=' + apiKey + '&shortUrl=' + $inputField.val();**
**  const xhr = new XMLHttpRequest();**
**  xhr.responseType = 'json';**
**  xhr.onreadystatechange = function() {**
**  if (xhr.readyState === XMLHttpRequest.DONE) {**
**    console.log(xhr.response);**
**    $responseField.append('<p>Your expanded url is: </p><p>' + xhr.response.longUrl + '</p>');**
**  	}**
**	};**
  
** xhr.open('GET', urlToExpand);**
** xhr.send();**
**}**

**function shortenUrl() {**
** const urlWithKey = url + '?key=' + apiKey;**
**  const urlToShorten = $inputField.val() ;**
**  const data = JSON.stringify({longUrl: urlToShorten});**
  
**  const xhr = new XMLHttpRequest();**
**  xhr.responseType = 'json';**
**  xhr.onreadystatechange = function(){**
**    if (xhr.readyState === XMLHttpRequest.DONE) {**
**  		$responseField.append('<p>Your shortened url is: </p><p>' + xhr.response.id + '</p>');**
**		};**
**  };**
**  xhr.open('POST', urlWithKey);**
**  xhr.setRequestHeader('Content-Type', 'application/json');**
**	xhr.send(data);**
**}**

**function expand() {**
**  $responseField.empty();**
**  expandUrl();**
**  return false;**
**}**

**function shorten() {**
**  $responseField.empty();**
**  shortenUrl();**
**  return false;**
**}**

**// Call functions on submit**

**$expandButton.click(expand);**
**$shortenButton.click(shorten);**








